name: Backend CI

on:
  push:
    branches:
      - main

jobs:
  test:
    name: Run Tests
    runs-on: [self-hosted, Linux, X64]

    strategy:
      matrix:
        node-version: [22]

    env:
      MONGO_URI: ${{ secrets.MONGO_URI }}
      JWT_SECRET: ${{ secrets.JWT_SECRET }}
      PORT: ${{ secrets.PORT }}
      NODE_ENV: production

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Check Secrets Presence
        run: |
          [ -n "$MONGO_URI" ] && echo "MONGO_URI: OK" || (echo "MONGO_URI: MISSING" && exit 1)
          [ -n "$JWT_SECRET" ] && echo "JWT_SECRET: OK" || (echo "JWT_SECRET: MISSING" && exit 1)
          [ -n "$PORT" ] && echo "PORT: OK" || (echo "PORT: MISSING" && exit 1)

      - run: pm2 stop all || true

      # Backend deps
      - name: Install Backend Dependencies
        working-directory: ./backend
        run: |
          npm install --global yarn
          yarn --version
          yarn install

      # Frontend deps & build
      - name: Install Frontend Dependencies
        working-directory: ./frontend
        run: |
          df -h
          sudo rm -rf ./build
          yarn install
          yarn run build

      # Tests
      - name: Run Backend Tests
        working-directory: ./backend
        run: npm test

      - name: Create .env file
        working-directory: ./backend
        run: |
          echo "MONGO_URI=$MONGO_URI" > .env
          echo "JWT_SECRET=$JWT_SECRET" >> .env
          echo "PORT=$PORT" >> .env
          echo "NODE_ENV=production" >> .env

      - name: Start PM2
        working-directory: ./backend
        run: |
          pm2 delete all || true
          pm2 start ecosystem.config.js --env production --update-env
          pm2 save
